{"version":3,"sources":["Components/HOME/Home.js","Components/BMR/Form/Form.js","Components/BMR/Chart/Chart.js","Components/BMR/BMR.js","Components/Navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","Form","props","BMR","onSubmit","submitForm","htmlFor","onChange","getHeight","type","name","id","value","height","getWeight","weight","getAge","age","onClick","getRadio","defaultChecked","Chart","useState","protein","setProtein","carbs","setCarbs","fat","setFat","goal","setGoal","calories","setCalories","getGoal","e","target","useEffect","gender","Math","ceil","count","caloriePlan","chartData","labels","datasets","data","label","borderColor","backgroundColor","state","setState","preventDefault","getRadioGender","this","Component","Navigation","activeClassName","exact","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7d56cda5.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Home.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"overlay\"></div> \r\n\r\n            <h1 className=\"home-quotes\">ALWAYS WORK ON YOUR SELVE</h1>   \r\n            <Link to='/BMR' className=\"btn-link\">Continue</Link>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Form.css'\r\n\r\nexport default function Form(props) {\r\n\r\n    let BMR = props.BMR;\r\n    return (\r\n        <div className=\"BMR-calculate\">\r\n            <h1>BMR CALCULATOR</h1>\r\n        <form onSubmit={props.submitForm} className=\"form\">\r\n            <label htmlFor=\"vyska\">Height:</label>\r\n                <input onChange={props.getHeight} className=\"form-input\" type=\"text\" name=\"vyska\" id=\"vyska\" value={props.height}/>\r\n            <label htmlFor=\"vaha\">Weight:</label>\r\n                <input onChange={props.getWeight} className=\"form-input\" type=\"text\" name=\"vaha\" id=\"vaha\" value={props.weight}/>\r\n            <label htmlFor=\"vek\">Age:</label>\r\n                <input onChange={props.getAge} className=\"form-input\" type=\"text\" name=\"vek\" id=\"vek\" value={props.age}/>\r\n            <span>\r\n                <label htmlFor=\"man\">Man</label>\r\n                <input onClick={props.getRadio} className=\"radio\" defaultChecked type=\"radio\" name=\"pohlavie\" id=\"man\" value=\"man\"/>\r\n                <label htmlFor=\"woman\">Woman</label>\r\n                <input onClick={props.getRadio} className=\"radio\" type=\"radio\" name=\"pohlavie\" id=\"woman\" value=\"woman\"/>\r\n            </span>\r\n            <button type=\"submit\" className=\"btn-submit\">CALCULATE</button>\r\n        </form>\r\n        <h3>Your BMR is: {BMR} kcla</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Pie } from 'react-chartjs-2'\r\nimport './Chart.css'\r\n\r\n\r\nexport default function Chart(props) {\r\n    const [protein, setProtein] = useState(0);\r\n    const [carbs, setCarbs] = useState(0);\r\n    const [fat, setFat] = useState(0);\r\n    const [goal, setGoal] = useState(\"cut\");\r\n    const [calories, setCalories] = useState(0);\r\n\r\n    const getGoal = (e) => {\r\n        setGoal(e.target.value);\r\n    }\r\n\r\n    const caloriePlan = () => {\r\n        if(props.BMR === 0){\r\n\r\n        }\r\n        else{\r\n        if(props.gender === \"man\"){\r\n        if(goal === \"cut\"){\r\n            setCalories(Math.ceil(props.BMR * 1.2));\r\n            setFat(Math.ceil(props.weight * 0.8));\r\n            setProtein(Math.ceil(props.weight * 2.5));\r\n            let count = fat * 9 + protein * 4;\r\n            setCarbs(Math.ceil((calories - count) / 4));\r\n        }\r\n        else{\r\n            setCalories(Math.ceil(props.BMR * 1.4));\r\n            setFat(Math.ceil(props.weight * 1));\r\n            setProtein(Math.ceil(props.weight * 2));\r\n            let count = fat * 9 + protein * 4;\r\n            setCarbs(Math.ceil((calories - count) / 4));\r\n        }}\r\n        else{\r\n            if(goal === \"cut\"){\r\n                setCalories(Math.ceil(props.BMR * 1.2));\r\n                setFat(Math.ceil(props.weight * 0.8));\r\n                setProtein(Math.ceil(props.weight * 1.5));\r\n                let count = fat * 9 + protein * 4;\r\n                setCarbs(Math.ceil((calories - count) / 4));\r\n            }\r\n            else{\r\n                setCalories(Math.ceil(props.BMR * 1.4));\r\n                setFat(Math.ceil(props.weight * 1));\r\n                setProtein(Math.ceil(props.weight * 1));\r\n                let count = fat * 9 + protein * 4;\r\n                setCarbs(Math.ceil((calories - count) / 4));\r\n            }}} \r\n    }\r\n\r\n    \r\n    useEffect( () => {\r\n        caloriePlan();\r\n    })\r\n\r\n\r\n    const chartData = {\r\n        labels: [\"Protein\", \"Carbs\", \"Fat\"],\r\n        datasets: [\r\n            {\r\n            data:[protein, carbs, fat],\r\n            label: 'Macronutrients',\r\n            borderColor: \"black\",\r\n            backgroundColor: ['rgb(255, 136, 0)', '#000', '#333']\r\n            }]\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Chart\">\r\n            <h1>Your goal</h1>\r\n            <span>\r\n                <label htmlFor=\"bulk\">Bulk</label>\r\n                <input onChange={getGoal} className=\"radio\" type=\"radio\" name=\"goal\" value=\"bulk\"/>\r\n                <label htmlFor=\"cut\">Cut</label>\r\n                <input onChange={getGoal} defaultChecked className=\"radio\" type=\"radio\" name=\"goal\" value=\"cut\"/>\r\n            </span>\r\n                <h2>Calculated calorie plan: {calories}kcla</h2>\r\n            <Pie data={chartData} />\r\n                <h3>Protein: {protein}g</h3>\r\n                <h3>Carbs: {carbs}g</h3>\r\n                <h3>Fat: {fat}g</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './BMR.css'\r\nimport Form from './Form/Form'\r\nimport Chart from './Chart/Chart'\r\n\r\nexport default class BMR extends Component {\r\n\r\n    state = {\r\n        BMR: 0,\r\n        height: 0,\r\n        weight: 0,\r\n        age: 0,\r\n        gender: \"man\",\r\n        goal: \"\"\r\n    }\r\n\r\n    getHeight = (e) =>{\r\n        let height = e.target.value;\r\n        this.setState({height: height});\r\n    }\r\n\r\n    getWeight = (e) =>{\r\n        let weight = e.target.value;\r\n        this.setState({weight: weight});\r\n    }\r\n\r\n    getAge = (e) =>{\r\n        let age = e.target.value;\r\n        this.setState({age: age})\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        if(this.state.weight === 0 || this.state.height === 0 || this.state.age === 0){\r\n            e.preventDefault();\r\n        }\r\n        else{\r\n        e.preventDefault();\r\n        if(this.state.gender === \"man\"){\r\n        let BMR = Math.ceil(88.362 + (13.397 * this.state.weight) + (4.799 * this.state.height) -(5.677 * this.state.age));\r\n        this.setState({BMR: BMR});\r\n        }\r\n        else{\r\n        let BMR = Math.ceil(447.593 + (9.247 * this.state.weight) + (3.098 * this.state.height) - (4.330 * this.state.age));\r\n        this.setState({BMR: BMR});\r\n        }}\r\n    }\r\n\r\n    getRadioGender = (e) => {\r\n        let gender = e.target.value;\r\n        this.setState({gender: gender});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"BMR\">\r\n                <Form BMR={this.state.BMR}\r\n                    weight={this.state.weight}\r\n                    height={this.state.height}\r\n                    age={this.state.age}\r\n                    getHeight = {this.getHeight}\r\n                    getWeight = {this.getWeight}\r\n                    getAge = {this.getAge}\r\n                    submitForm={this.submitForm}\r\n                    getRadio={this.getRadioGender}/>\r\n                <Chart\r\n                BMR={this.state.BMR}\r\n                gender={this.state.gender}\r\n                weight={this.state.weight}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Link, NavLink\r\n  } from \"react-router-dom\";\r\nimport './Navigation.css'\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <nav>\r\n            <Link  to=\"/Home\" className=\"logo\">MSPORTS</Link>\r\n            <NavLink activeClassName=\"active\" exact to=\"/Home\" className=\"nav-item\">Home</NavLink>\r\n            <NavLink activeClassName=\"active\"  to=\"/BMR\" className=\"nav-item\">Bmr Calculator</NavLink>\r\n            <NavLink activeClassName=\"active\"  to=\"/About\" className=\"nav-item\">About</NavLink>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Components/HOME/Home'\nimport BMR from './Components/BMR/BMR'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Navigation from './Components/Navigation/Navigation'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Navigation />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/Home\" exact component={Home} />\n      <Route path=\"/BMR\" component={BMR} />\n    </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}